<% include ../partials/header %>

	<div class="content-header row d-xl-block d-lg-block d-md-none d-sm-none d-none">
		<div class="content-header-left col-md-9 col-12 mb-2">
			<div class="row breadcrumbs-top">
				<div class="col-12">
					<h3 class="content-header-title float-left mb-0">Edit Event</h3>
					<div class="breadcrumb-wrapper col-12">
						<ol class="breadcrumb">
							<li class="breadcrumb-item"><a href="/admin">Home</a></li>
							<li class="breadcrumb-item active">Edit Event</li>
						</ol>
					</div>
				</div>
			</div>
		</div>
	</div>

	<div class="content-body">
		<% include ../partials/flash %>

			<form action="/admin/event/edit/<%= event._id %>" method="POST" enctype="multipart/form-data" id="formData"
				class="form-horizontal">
				<section id="personal-info">
					<div class="row">
						<div class="col-xl-12 col-lg-12">
							<div class="card">
								<div class="card-header border border-top-0 border-left-0 border-right-0">
									<h4 class="card-title pb-1">Edit Event Information</h4>
								</div>
								<div class="card-content">
									<div class="card-body">
										<div class="row">

											<!-- Event Type -->
											<div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 mb-1">
												<!-- <label>Event Type <span class="asterisk">*</span></label>
                                                <select class="form-control text-capitalize" required name="eventType">
                                                    <option value="">Select Option</option>
                                                    <option value="Contest" <%=event.eventType==='Contest' ? 'selected'
                                                        : '' %>>Contest</option>
                                                    <option value="Webinar" <%=event.eventType==='Webinar' ? 'selected'
                                                        : '' %>>Webinar</option>
                                                </select> -->
												<label>Event Type <span class="asterisk">*</span></label>
												<select class="form-control text-capitalize" required name="eventType">
													<option value="">Select Option</option>
													<% eventType.forEach((type)=> { %>
														<option value="<%= type.name %>" <%=event.eventType===type.name
															? 'selected' : '' %>>
															<%= type.name %>
														</option>
														<% }) %>
												</select>
											</div>

											<!-- Event Title -->
											<div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 mb-1">
												<label>Event Title <span class="asterisk">*</span></label>
												<input type="text" class="form-control" required name="eventTitle"
													placeholder="Event Title" value="<%= event.eventTitle || '' %>" />
											</div>

											<!-- Event Mode -->
											<div class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 mb-1">
												<label>Event Mode <span class="asterisk">*</span></label>
												<select class="form-control text-capitalize"
													onchange="onlineOfflineCheck()" id="eventMode" required name="mode">
													<option value="">Select Option</option>
													<option value="Online" <%=event.eventMode==='Online' ? 'selected'
														: '' %>>Online</option>
													<option value="Offline" <%=event.eventMode==='Offline' ? 'selected'
														: '' %>>Offline</option>
												</select>
											</div>

											<!-- Location (only visible if Offline) -->
											<div id="location"
												class="col-xl-6 col-lg-6 col-md-6 col-sm-6 col-12 mb-1 <%= event.eventMode === 'Offline' ? '' : 'd-none' %>">
												<label>Location</label>
												<input type="text" class="form-control" id="loc" maxlength="100"
													name="fullAddress"
													value="<%= event.location?.fullAddress || '' %>" />
												<input type="hidden" id="latitude" name="latitude"
													value="<%= event.location?.latitude || '' %>" />
												<input type="hidden" id="longitude" name="longitude"
													value="<%= event.location?.longitude || '' %>" />
												<input type="hidden" id="state" name="state"
													value="<%= event.location?.state || '' %>" />
												<input type="hidden" id="city" name="city"
													value="<%= event.location?.city || '' %>" />
											</div>

											<!-- Online URL (only visible if Online) -->
											<div id="onlineUrl"
												class="col-xl-3 col-lg-4 col-md-6 col-sm-6 col-12 mb-1 <%= event.eventMode === 'Online' ? '' : 'd-none' %>">
												<label>Online URL</label>
												<input type="text" class="form-control" maxlength="255" name="url"
													value="<%= event.url || '' %>" placeholder="Enter URL" />
											</div>

											<!-- Event Timing -->
											<div class="col-xl-3 mb-1">
												<label>Event Timing <span class="mandatory">*</span></label>
												<div id="eventTiming" class="row">
													<div class="col-6">
														<input name="timingFrom" type="datetime-local" id="timing-from"
															class="form-control" placeholder="From"
															value="<%= event.timing?.from ? new Date(event.timing.from).toISOString().slice(0,16) : '' %>" />
													</div>
													<div class="col-6">
														<input name="timingTo" type="datetime-local" id="timing-to"
															class="form-control" placeholder="To"
															value="<%= event.timing?.to ? new Date(event.timing.to).toISOString().slice(0,16) : '' %>" />
													</div>
												</div>
											</div>

											<!-- Registration Period -->
											<div class="col-xl-3 mb-1">
												<label>Registration Period <span class="mandatory">*</span></label>
												<div id="registration" class="row">
													<div class="col-6">
														<input name="registrationFrom" type="datetime-local"
															id="registration-from" class="form-control"
															placeholder="From"
															value="<%= event.registrationPeriod?.from ? new Date(event.registrationPeriod.from).toISOString().slice(0,16) : '' %>" />
													</div>
													<div class="col-6">
														<input name="registrationTo" type="datetime-local"
															id="registration-to" class="form-control" placeholder="To"
															value="<%= event.registrationPeriod?.to ? new Date(event.registrationPeriod.to).toISOString().slice(0,16) : '' %>" />
													</div>
												</div>
											</div>

											<!-- Description -->
											<div class="col-xl-6 col-lg-6 col-md-12 col-sm-12 col-12 mb-1">
												<label>Description</label>
												<textarea class="form-control" maxlength="500" name="description"
													cols="3" rows="3"><%= event.description || '' %></textarea>
											</div>

											<!-- Video Upload -->
											<div class="col-xl-4 col-md-4 col-sm-12 mb-1">
												<label for="video">Add Video</label>
												<input type="file" id="video" name="video" accept="video/*" />
												<% if(event.video){ %>
													<video width="320" height="180" controls>
														<source src="<%= event.video %>" type="video/mp4" />
														Your browser does not support the video tag.
													</video>
													<% } %>
											</div>

											<!-- Thumbnail Upload -->
											<div class="col-xl-4 col-md-4 col-sm-12 mb-1">
												<label for="thumbnail">Add Thumbnail</label>
												<input type="file" id="thumbnail" name="thumbnail" accept="image/*" />
												<% if(event.thumbnail){ %>
													<img src="<%= event.thumbnail %>" alt="Thumbnail" width="100" />
													<% } %>
											</div>

											<!-- Guidelines Upload -->
											<div class="col-xl-4 col-md-4 col-sm-12 mb-1">
												<label for="guidelines">Add Guidelines</label>
												<input type="file" id="guidelines" name="guidelines"
													accept=".pdf,.doc,.docx,.txt" />
												<% if(event.guidelines){ %>
													<a href="<%= event.guidelines %>" target="_blank">View Existing
														Guidelines</a>
													<% } %>
											</div>

										</div>
									</div>
								</div>
							</div>
						</div>
				</section>

				<div class="col-lg-12 col-md-12 col-sm-12 col-12 mt-2 text-right">
					<button id="sub-btn" type="submit"
						class="btn btn-success px-lg-2 ml-1 waves-effect waves-light">Update</button>
				</div>
			</form>
	</div>

	<script>
		function onlineOfflineCheck() {
			const mode = document.getElementById('eventMode').value;
			if (mode === "Offline") {
				document.getElementById('location').classList.remove('d-none');
				document.getElementById('onlineUrl').classList.add('d-none');
			} else if (mode === "Online") {
				document.getElementById('location').classList.add('d-none');
				document.getElementById('onlineUrl').classList.remove('d-none');
			}
		}

		// Trigger the function on page load for prefill case
		document.addEventListener('DOMContentLoaded', () => {
			onlineOfflineCheck();
		});
	</script>
	<script>
		// ✅ Video Validation
		document.getElementById('video').addEventListener('change', function (e) {
			const file = e.target.files[0];
			if (file && !file.type.startsWith('video/')) {
				alert('Please upload a valid video file.');
				e.target.value = '';
			}
		});

		// ✅ Thumbnail Image Validation (Fix: Correct id is 'thumbnail')
		document.getElementById('thumbnail').addEventListener('change', function (e) {
			const file = e.target.files[0];
			if (file && !file.type.startsWith('image/')) {
				alert('Please upload a valid image file.');
				e.target.value = '';
			}
		});

		// ✅ Guidelines Document Validation
		document.getElementById('guidelines').addEventListener('change', function (e) {
			const file = e.target.files[0];
			const allowedTypes = [
				'application/pdf',
				'application/msword',
				'application/vnd.openxmlformats-officedocument.wordprocessingml.document',
				'text/plain'
			];

			if (file && !allowedTypes.includes(file.type)) {
				alert('Please upload a valid document file (PDF, DOC, DOCX, TXT).');
				e.target.value = '';
			}
		});
	</script>



	<script
		src="https://maps.googleapis.com/maps/api/js?key=AIzaSyB7DDN_gUp2zyrlElXtYpjTEQobYiUB9Lg&callback=initMap&libraries=places&v=weekly"
		defer></script>
	<script>
		flatpickr("#timing-from", {
			enableTime: true,
			dateFormat: "Y-m-d h:i K", // 👈 Example: 2025-04-01 02:30 PM
			time_24hr: false           // 12 hour format with AM/PM
		});

		flatpickr("#timing-to", {
			enableTime: true,
			dateFormat: "Y-m-d h:i K",
			time_24hr: false
		});
		flatpickr("#registration-from", {
			enableTime: true,
			dateFormat: "Y-m-d h:i K", // 👈 Example: 2025-04-01 02:30 PM
			time_24hr: false           // 12 hour format with AM/PM
		});
		flatpickr("#registration-to", {
			enableTime: true,
			dateFormat: "Y-m-d h:i K",
			time_24hr: false
		});
	</script>


	<script>
		function initMap() {
			const input = document.getElementById("loc");

			const autocomplete = new google.maps.places.Autocomplete(input, {
				componentRestrictions: { country: "in" }
			});

			autocomplete.addListener("place_changed", function () {
				const place = autocomplete.getPlace();
				console.log(place);

				document.getElementById("fullAddress").value = place.formatted_address || input.value;
				document.getElementById("latitude").value = place.geometry?.location?.lat() || '';
				document.getElementById("longitude").value = place.geometry?.location?.lng() || '';

				let state = '';
				let city = '';
				place.address_components.forEach(component => {
					if (component.types.includes("administrative_area_level_1")) {
						state = component.long_name;
					}
					if (component.types.includes("locality")) {
						city = component.long_name;
					}
				});

				document.getElementById("state").value = state;
				document.getElementById("city").value = city;
			});
		}

		window.initMap = initMap;
	</script>






	<script>
		const imageUploaders = document.querySelectorAll(".my-logo-uploader");
		const submitBtns = document.querySelectorAll(".btnSubmit");
		imageUploaders.forEach((x) => {
			const idText = x.getAttribute("data-id");
			const id = document.querySelector(`#${idText}`);

			x.addEventListener("change", async (e) => {
				try {
					submitBtns.forEach((x) => {
						x.disabled = true;
					});
					const filesData = Array.from(e.target.files);
					if (!Array.isArray(filesData) || filesData.length <= 0)
						throw new Error("No image found!");

					const data = await Promise.all(
						filesData.map(async (file) => {
							const ext = file.name.split(".").pop();
							const res = await axios.get("/admin/s3upload", {
								params: { type: file.type, ext },
							});
							if (!res || !res.data || !res.data.data) return null;
							const { url, key } = res.data.data;
							if (!url || !key) return null;
							const upload = await axios.put(url, file, {
								headers: { "Content-Type": file.type },
							});
							if (upload || upload.status === 200) return key;
							return null;
						})
					);

					const files = data.filter((x) => !!x);

					if (files.length <= 0)
						throw new Error("Unable to upload any image!");

					files.forEach((f) => {
						const div = document.createElement("div");
						div.setAttribute(
							"class",
							"col-xl-12 col-md-12 col-sm-12 col-12 mt-1"
						);

						const img = document.createElement("img");
						img.setAttribute(
							"src",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						img.setAttribute("alt", "img");
						img.setAttribute("width", "40");
						img.setAttribute("height", "40");
						div.appendChild(img);

						const input = document.createElement("input");
						input.setAttribute("type", "hidden");
						input.setAttribute("name", idText);
						input.setAttribute("value", f);
						div.appendChild(input);

						const p = document.createElement("p");
						p.setAttribute("class", "mt-1");
						const rmBtn = document.createElement("a");
						rmBtn.setAttribute("class", "text-danger");
						rmBtn.setAttribute("href", "javascript:void(0)");
						rmBtn.textContent = "Remove ";
						rmBtn.addEventListener("click", () => {
							div.parentNode.removeChild(div);
							$(".firstImage").removeClass("d-none");
						});
						p.appendChild(rmBtn);
						const viewBtn = document.createElement("a");
						viewBtn.setAttribute("class", "text-primary mr-2");
						viewBtn.setAttribute("target", "_blank");
						viewBtn.setAttribute(
							"href",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						viewBtn.textContent = "View";
						p.appendChild(viewBtn);
						div.appendChild(p);
						id.append(div);
						$(".firstImage").addClass("d-none");
					});
					submitBtns.forEach((x) => {
						x.disabled = false;
					});
					x.value = "";
				} catch (err) {
					console.log(err);
				}
			});
		});

		const imageUpload = document.querySelectorAll(".my-banner-uploader");
		imageUpload.forEach((x) => {
			const idText = x.getAttribute("data-id");
			const id = document.querySelector(`#${idText}`);

			x.addEventListener("change", async (e) => {
				try {
					submitBtns.forEach((x) => {
						x.disabled = true;
					});
					const filesData = Array.from(e.target.files);
					if (!Array.isArray(filesData) || filesData.length <= 0)
						throw new Error("No image found!");

					const data = await Promise.all(
						filesData.map(async (file) => {
							const ext = file.name.split(".").pop();
							const res = await axios.get("/admin/s3upload", {
								params: { type: file.type, ext },
							});
							if (!res || !res.data || !res.data.data) return null;
							const { url, key } = res.data.data;
							if (!url || !key) return null;
							const upload = await axios.put(url, file, {
								headers: { "Content-Type": file.type },
							});
							if (upload || upload.status === 200) return key;
							return null;
						})
					);

					const files = data.filter((x) => !!x);

					if (files.length <= 0)
						throw new Error("Unable to upload any image!");

					files.forEach((f) => {
						const div = document.createElement("div");
						div.setAttribute(
							"class",
							"col-xl-12 col-md-12 col-sm-12 col-12 mt-1"
						);

						const img = document.createElement("img");
						img.setAttribute(
							"src",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						img.setAttribute("alt", "img");
						img.setAttribute("width", "40");
						img.setAttribute("height", "40");
						div.appendChild(img);

						const input = document.createElement("input");
						input.setAttribute("type", "hidden");
						input.setAttribute("name", idText);
						input.setAttribute("value", f);
						div.appendChild(input);

						const p = document.createElement("p");
						p.setAttribute("class", "mt-1");
						const rmBtn = document.createElement("a");
						rmBtn.setAttribute("class", "text-danger");
						rmBtn.setAttribute("href", "javascript:void(0)");
						rmBtn.textContent = "Remove ";
						rmBtn.addEventListener("click", () => {
							div.parentNode.removeChild(div);
							$(".bannerImage").removeClass("d-none");
						});
						p.appendChild(rmBtn);
						const viewBtn = document.createElement("a");
						viewBtn.setAttribute("class", "text-primary mr-2");
						viewBtn.setAttribute("target", "_blank");
						viewBtn.setAttribute(
							"href",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						viewBtn.textContent = "View";
						p.appendChild(viewBtn);
						div.appendChild(p);
						id.append(div);
						$(".bannerImage").addClass("d-none");
					});
					submitBtns.forEach((x) => {
						x.disabled = false;
					});
					x.value = "";
				} catch (err) {
					console.log(err);
				}
			});
		});

		const imageUploader = document.querySelectorAll(".my-gallery-uploader");
		imageUploader.forEach((x) => {
			const idText = x.getAttribute("data-id");
			const id = document.querySelector(`#${idText}`);

			x.addEventListener("change", async (e) => {
				try {
					submitBtns.forEach((x) => {
						x.disabled = true;
					});
					const filesData = Array.from(e.target.files);
					if (!Array.isArray(filesData) || filesData.length <= 0)
						throw new Error("No image found!");

					const data = await Promise.all(
						filesData.map(async (file) => {
							const ext = file.name.split(".").pop();
							const res = await axios.get("/admin/s3upload", {
								params: { type: file.type, ext },
							});
							if (!res || !res.data || !res.data.data) return null;
							const { url, key } = res.data.data;
							if (!url || !key) return null;
							const upload = await axios.put(url, file, {
								headers: { "Content-Type": file.type },
							});
							if (upload || upload.status === 200) return key;
							return null;
						})
					);

					const files = data.filter((x) => !!x);

					if (files.length <= 0)
						throw new Error("Unable to upload any image!");

					files.forEach((f) => {
						const div = document.createElement("div");
						div.setAttribute(
							"class",
							"col-xl-3 col-md-3 col-sm-3 col-12"
						);

						const img = document.createElement("img");
						img.setAttribute(
							"src",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						img.setAttribute("alt", "img");
						img.setAttribute("width", "40");
						img.setAttribute("height", "40");
						div.appendChild(img);

						const input = document.createElement("input");
						input.setAttribute("type", "hidden");
						input.setAttribute("name", idText);
						input.setAttribute("value", f);
						div.appendChild(input);

						const p = document.createElement("p");
						p.setAttribute("class", "mt-1");
						const rmBtn = document.createElement("a");
						rmBtn.setAttribute("class", "text-danger");
						rmBtn.setAttribute("href", "javascript:void(0)");
						rmBtn.textContent = "Remove ";
						rmBtn.addEventListener("click", () =>
							div.parentNode.removeChild(div)
						);
						p.appendChild(rmBtn);
						const viewBtn = document.createElement("a");
						viewBtn.setAttribute("class", "text-primary");
						viewBtn.setAttribute("target", "_blank");
						viewBtn.setAttribute(
							"href",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						viewBtn.textContent = "View";
						p.appendChild(viewBtn);
						div.appendChild(p);
						id.append(div);
					});
					submitBtns.forEach((x) => {
						x.disabled = false;
					});
					x.value = "";
				} catch (err) {
					console.log(err);
				}
			});
		});

		const diningUploaders = document.querySelectorAll(
			".my-executive-uploader"
		);
		diningUploaders.forEach((x) => {
			const idText = x.getAttribute("data-id");
			const id = x.closest(`#${idText}`);
			x.addEventListener("change", async (e) => {
				try {
					submitBtns.forEach((x) => {
						x.disabled = true;
					});
					const filesData = Array.from(e.target.files);
					if (!Array.isArray(filesData) || filesData.length <= 0)
						throw new Error("No image found!");

					const data = await Promise.all(
						filesData.map(async (file) => {
							const ext = file.name.split(".").pop();
							const res = await axios.get("/admin/s3upload", {
								params: { type: file.type, ext },
							});
							if (!res || !res.data || !res.data.data) return null;
							const { url, key } = res.data.data;
							if (!url || !key) return null;
							const upload = await axios.put(url, file, {
								headers: { "Content-Type": file.type },
							});
							if (upload || upload.status === 200) return key;
							return null;
						})
					);

					const files = data.filter((x) => !!x);

					if (files.length <= 0)
						throw new Error("Unable to upload any image!");

					files.forEach((f) => {
						const div = document.createElement("div");
						div.setAttribute(
							"class",
							"col-xl-12 col-md-12 col-sm-12 col-12"
						);

						const img = document.createElement("img");
						img.setAttribute(
							"src",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						img.setAttribute("alt", "img");
						img.setAttribute("width", "50");
						img.setAttribute("height", "50");
						div.appendChild(img);

						const input = document.createElement("input");
						input.setAttribute("type", "hidden");
						input.setAttribute("name", idText);
						input.setAttribute("value", f);
						div.appendChild(input);

						const p = document.createElement("p");
						p.setAttribute("class", "mt-1");
						const rmBtn = document.createElement("a");
						rmBtn.setAttribute("class", "text-danger");
						rmBtn.setAttribute("href", "javascript:void(0)");
						rmBtn.textContent = "Remove ";
						rmBtn.addEventListener("click", () => {
							div.parentNode.removeChild(div);
						});
						rmBtn.addEventListener("click", () =>
							div.parentNode.removeChild(div)
						);
						p.appendChild(rmBtn);
						const viewBtn = document.createElement("a");
						viewBtn.setAttribute("class", "text-primary mr-2");
						viewBtn.setAttribute("target", "_blank");
						viewBtn.setAttribute(
							"href",
							`https://mmt-alls-1.s3.ap-south-1.amazonaws.com/${f}`
						);
						viewBtn.textContent = "View";
						p.appendChild(viewBtn);
						div.appendChild(p);
						$(`#${idText}`).append(div);
						$(".diningCleaa").addClass("d-none");
						$(".diningCleaa").closest(".row").removeAttr("id");
					});
					submitBtns.forEach((x) => {
						x.disabled = false;
					});
					x.value = "";
				} catch (err) {
					console.log(err);
				}
			});
		});

		$("#country").change(() => {
			$("#state")
				.find("option")
				.remove()
				.end()
				.append(
					'<option disabled selected value="">Select Option</option>'
				);
			axios
				.post("/admin/helper/getstate", {
					countryId: $("#country").val(),
				})
				.then(({ data }) => {
					data.forEach((d) => {
						$("#state").append(
							`<option class='text-capitalize' value='${d._id}'>${d.name}</option>`
						);
					});
				})
				.catch((e) => console.log(e));
		});

		$("#state").change(() => {
			$("#city")
				.find("option")
				.remove()
				.end()
				.append(
					'<option disabled selected value="">Select Option</option>'
				);
			axios
				.post("/admin/helper/getcity", {
					stateId: $("#state").val(),
				})
				.then(({ data }) => {
					data.forEach((d) => {
						$("#city").append(
							`<option class='text-capitalize' value='${d._id}'>${d.name}</option>`
						);
					});
				})
				.catch((e) => console.log(e));
		});

		$(".btnSubmit").click(function () {
			// const password = $("#password").val();
			// const confirmPassword = $("#confirm_password").val();
			// if (password != confirmPassword) {
			//   alert("Passwords do not match.");
			//   return false;
			// }
			return true;
		});

		$(".appoint").click(() => {
			$(".diningRows").append(`  <div class="form-group row">
								<div class="col-xl-2 mb-1">
										<label>Name</label>
										<input class="form-control text-capitalize" type="text" name="repName">
									</div>
									<div class="col-xl-2 mb-1">
										<label>Designation</label>
										<input class="form-control text-capitalize" type="text" name="repDesignation" >
									</div>
									<div class="col-xl-2 mb-1">
										<label>Email</label>
										<input class="form-control" type="email" name="repEmail" >
									</div>
									<div class="col-xl-2 mb-1">
											<label>Contact Number</label>
											<input class="form-control" type="text" name="repMobile" minlength="10" maxlength="13">
										</div>
									<div class="col-xl-2 mt-2">
										<button class="btn btn-danger removediv">-</button>
									</div>
                        	</div>
                        
             
    </div>`);
		});

		$(document).on("click", ".removediv", function () {
			$(this).closest(".row").remove();
		});

		// $('#password, #confirm_password').on('keyup', function () {
		//   $('#message').removeClass('d-none');
		//   if ($('#password').val() == $('#confirm_password').val()) {
		//     $('#message').html('Matching').css('color', 'green');
		//     $('#message').addClass('d-none');
		//   } else
		//     $('#message').html('Not Matching').css('color', 'red');
		// });


		// dropdown search filter
		// function filterFunction() {
		// 	var input, filter, ul, li, a, i;
		// 	input = document.getElementById("myInput");
		// 	filter = input.value.toUpperCase();
		// 	div = document.getElementById("myDropdown");
		// 	a = div.getElementsByTagName("option");
		// 	for (i = 0; i < a.length; i++) {
		// 		txtValue = a[i].textContent || a[i].innerText;
		// 		if (txtValue.toUpperCase().indexOf(filter) > -1) {
		// 			a[i].style.display = "";
		// 		} else {
		// 			a[i].style.display = "none";
		// 		}
		// 	}
		// }

		function reset() {
			window.location.href = "/admin/college/add";
		}

	</script>
	<!-- for search filter for universities -->
	<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
	<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
	<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>
	<script src="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.jquery.min.js"></script>
	<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/chosen/1.8.7/chosen.min.css">
	<script type="text/javascript">
		$(".chosen").chosen();
	</script>
	<% include ../partials/footer %>