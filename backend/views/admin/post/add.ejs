<% include ../partials/header %>
  <div class="content-header row d-xl-block d-lg-block d-md-none d-sm-none d-none">
    <div class="content-header-left col-md-9 col-12 mb-2">
      <div class="row breadcrumbs-top">
        <div class="col-12">
          <h3 class="content-header-title float-left mb-0">Add Post</h3>
          <div class="breadcrumb-wrapper col-12">
            <ol class="breadcrumb">
              <li class="breadcrumb-item"><a href="/admin">Home</a></li>
              <li class="breadcrumb-item active">Add Post</li>
            </ol>
          </div>
        </div>
      </div>
    </div>
  </div>
  <div id="add-model">
    <div class="content-body">
      <% include ../partials/flash %>
        <form id="post-form" enctype="multipart/form-data">
          <!-- Input Group for Post -->
          <div class="input-group">
            <!-- Text Input -->
            <textarea name="content" id="post-content" class="form-control" rows="3" placeholder="What's on your mind?"
              required></textarea>
            <!-- Media Button -->
            <div class="ml-3">
              <div>
                <label for="file-upload" class="media-btn">
                  <img src="https://static.xx.fbcdn.net/rsrc.php/v4/y7/r/Ivw7nhRtXyo.png" alt="Media Icon">
                  <!-- Facebook Media Icon -->
                  Photo/Video
                </label>
                <input type="file" id="file-upload" name="file" class="d-none" multiple accept="image/*,video/*">
              </div>
              <div>
                <button class="border-none" style="border:none; background:transparent" type="button"
                  data-bs-toggle="modal" data-bs-target="#staticBackdrop">
                  <img src="	https://static.xx.fbcdn.net/rsrc.php/v4/yq/r/b37mHA1PjfK.png" alt="Media Icon">
                  <!-- Facebook Media Icon -->
                  Tag
                </button>
              </div>
              <!-- Modal -->
              <div class="modal fade " id="staticBackdrop" data-bs-backdrop="static" data-bs-keyboard="false"
                tabindex="-1" aria-labelledby="staticBackdropLabel" aria-hidden="true" style="overflow: hidden;">
                <div class="modal-dialog new-model-dialog">
                  <div class="modal-content">
                    <div class="modal-header">
                      <h5 class="modal-title text-white" id="staticBackdropLabel">Tag People</h5>
                      <button onclick="closePopup()" type="button" class="btn-close" data-bs-dismiss="modal"
                        aria-label="Close" style="background:transparent; border:none">
                        <i class="fa-solid fa-x" style="color: #ffffff;"></i>
                      </button>
                    </div>
                    <div class="modal-body">
                      <div class="tag_people">
                        <div class="search">
                          <div class="tagging-container">
                            <div class="tag-input-container">
                              <div class="tags" id="tagscandidate">
                                <!-- Tags will dynamically appear here -->

                              </div>
                              <!-- <input type="text" class="tag-input" placeholder="Taged"> -->
                              <!-- <textarea name="content" id="post-content" class="form-control" rows="1" placeholder="What's on your mind?"
                              required>
                              <span>test</span>
                             </textarea> -->

                            </div>
                            <span class="done" data-bs-dismiss="modal" id="donebutton">Done</span>
                          </div>
                          <div class="nav--pills">
                            <ul class="nav nav-tabs" id="myTab" role="tablist">
                              <!-- <li class="nav-item" role="presentation" onclick="selctedTagFor('admin')">
                                <a class="nav-link" id="admin-tab" data-bs-toggle="tab" href="#admin" role="tab"
                                  aria-controls="admin" aria-selected="true">Admin</a>
                              </li> -->
                              <li class="nav-item" role="presentation">
                                <a class="nav-link" id="company-tab" data-bs-toggle="tab" href="#company" role="tab"
                                  aria-controls="company" aria-selected="false">Company</a>
                              </li>
                              <li class="nav-item" role="presentation">
                                <a class="nav-link" id="institute-tab" data-bs-toggle="tab" href="#institute" role="tab"
                                  aria-controls="institute" aria-selected="false">Institute</a>
                              </li>
                              <li class="nav-item" role="presentation">
                                <a class="nav-link active" id="student-tab" data-bs-toggle="tab" href="#student"
                                  role="tab" aria-controls="student" aria-selected="false">Student</a>
                              </li>
                            </ul>

                            <!-- Tab Content -->
                            <div class="tab-content" id="myTabContent">

                              <div class="tab-pane fade" id="company" role="tabpanel" aria-labelledby="company-tab">
                                <!-- Company content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon"
                                    onclick="searchbynameorphone()"></i>
                                  <input type="text" placeholder="Search" id="searchbyCompany" name="searchbyCompany"
                                    oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Company Name</th>
                                        <!-- <th>Mobile</th> -->
                                      </tr>
                                    </thead>
                                    <tbody id="companyTableBody">
                                      <!-- <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp"
                                              title="Focal Skill Development Pvt Ltd">Focal Skill Development Pvt
                                              Ltd</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr> -->
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                              <div class="tab-pane fade" id="institute" role="tabpanel" aria-labelledby="institute-tab">
                                <!-- Institute content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon"
                                    onclick="searchbynameorphone()"></i>
                                  <input type="text" placeholder="Search" id="searchbyInstitute"
                                    name="searchbyInstitute" oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Institute Name</th>
                                        <!-- <th>Mobile</th> -->
                                      </tr>
                                    </thead>
                                    <tbody id="collegeTableBody">
                                      <!-- <tr>
                                        <td>
                                          <input type="checkbox">
                                        </td>
                                        <td class="employee-info">
                                          <img src="/public_assets/images/newpage/logo-ha.svg" alt=""
                                            class="employee-avatar" />
                                          <div class='employee-basic-info'>
                                            <span class="employee-name tooltipp" title="Akash">Akash</span>

                                          </div>
                                        </td>
                                        <td>12345678900</td>

                                      </tr> -->
                                    </tbody>
                                  </table>
                                </div>
                              </div>
                              <div class="tab-pane fade show active" id="student" role="tabpanel"
                                aria-labelledby="student-tab">
                                <!-- Student content goes here -->
                                <div class="inner_search">
                                  <i class="fa-solid fa-magnifying-glass search-icon"></i>
                                  <input type="text" placeholder="Search" id="searchbyCanditate"
                                    name="searchbyCanditate" oninput="debouncedSearch()">
                                </div>
                                <div class='employee-attendance-table'>
                                  <table class="employee-table">
                                    <thead>
                                      <tr class='header-tr'>
                                        <th>Select</th>
                                        <th>Student Name</th>
                                        <th>Mobile</th>
                                      </tr>
                                    </thead>


                                    <tbody id="candidateTableBody">
                                      


                                    </tbody>
                                  </table>
                                </div>
                              </div>
                            </div>
                          </div>
                        </div>
                      </div>
                    </div>

                  </div>
                </div>
              </div>


            </div>

          </div>
          <!-- Submit Button -->
          <button type="submit" class="btn btn-primary mt-3">Post</button>
        </form>
        <div id="image-preview" style="display: flex; flex-wrap: wrap; gap: 10px; margin-top: 10px;"></div>


    </div>

  </div>


  <style>
    #add-model .hideScroll .model-open .model {
      overflow: hidden;
    }

    .inner_search {
      display: flex;
      align-items: center;
      justify-content: center;
    }

    .search input {
      border: 1px solid #ccc;
      border-radius: 15px;
      font-size: 16px;
      padding: 3px 10px;
      width: 60%;

    }

    .search-icon {
      color: #FC2B5A;
      border: 1px solid #ccc;
      padding: 6px 10px;
      display: inline-block;
      border-top-left-radius: 15px;
      border-bottom-left-radius: 15px;
    }

    .inner_search input {
      border: 1px solid #ccc;
      border-left: none;
      border-radius: 0px;
      border-top-right-radius: 15px;
      border-bottom-right-radius: 15px;
      font-size: 16px;
      padding: 3px 10px;
      width: 30%;
    }

    .tagging-container {
      /*display: flex;*/
      align-items: center;
      justify-content: center;
      margin: 0 auto;
    }

    .tag-input-container {
      margin-right: 10px;
    }

    .tags {
      display: flex;
      flex-wrap: wrap;
      gap: 5px;
    }

    .tag {
      display: inline-flex;
      align-items: center;
      background-color: #f0f0f0;
      color: #333;
      padding: 5px 10px;
      border-radius: 15px;
      font-size: 14px;
    }

    .tag .remove-tag {
      margin-left: 5px;
      cursor: pointer;
      color: #FC2B5A;
      font-weight: bold;
    }

    .tag-input-container input {
      /* border: ; */
      outline: none;
      font-size: 14px;
      padding: 5px 10px;
      min-width: 100%;
    }

    .done {
      color: #FC2B5A;
      cursor: pointer;
      font-size: 14px;
    }

    .nav--pills {
      display: flex;
      gap: 5px;
      align-items: center;
      justify-content: space-evenly;
      padding-block: 15px;
      flex-direction: column;
      margin-block: 20px;
      background: #fff;
    }

    .nav--pills>div {
      /* background: #FC2B5A; */
      width: 100%;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link {
      position: relative;
      border-top: 1px solid transparent;
      border-left: 1px solid transparent;
      border-right: 1px solid transparent;
      border-bottom: none;
      transition: all 0.3s ease;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      font-size: 20px;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link.active {
      position: relative;
      border-top: 1px solid transparent;
      border-left: 1px solid transparent;
      border-right: 1px solid transparent;
      border-image: linear-gradient(30deg, #FC2B5A, rgba(115, 103, 240, 0.5)) 1 !important;
      border-bottom: none;
      background: none;
      transition: all 0.3s ease;
      border-top-left-radius: 10px;
      border-top-right-radius: 10px;
      font-size: 20px;
    }

    .nav--pills .nav.nav-tabs .nav-item .nav-link.active:after {
      content: "";
      /* Remove bottom gradient */
      display: none;
    }

    .tab-pane {
      transition: opacity 0.3s ease-in-out, transform 0.3s ease-in-out;
    }

    .tab-pane:not(.active) {
      opacity: 0;
      transform: scale(0.95);
      /* Slight zoom-out effect when hidden */
    }

    .tab-pane.active {
      opacity: 1;
      transform: scale(1);
      /* Reset zoom to normal for the active tab */
    }

    /* table css  */
    .employee-list-container {
      padding: 0px;
      width: 80%px;
      background-color: var(--textWhite);
      /* #ffffff;*/
      border-radius: 8px;
      color: #FF1567;
    }

    .employee-basic-info {
      display: flex;
      align-items: center;
      gap: 5px;
      /* flex-direction: column; */
    }

    .employee-list-title {
      font-size: 25px;
      font-weight: 600;
      margin-bottom: 10px;
      text-align: center;
      padding: 10px;
    }


    .employee-attendance-table {
      width: 100%;
      /* overflow-x: auto; */
      margin-top: 25px;
      max-height: 50vh;
    }

    .employee-table {
      width: 100%;
      border-collapse: collapse;
      table-layout: auto;
      /* table-layout: fixed; */
      table-layout: auto;
    }

    .employee-table th {
      text-align: center;
    }

    .employee-table th,
    .employee-table td {
      padding: 12px;
      border-bottom: 1px solid #ddd;

    }

    .employee-table tr {
      display: table;
      width: 100%;
      table-layout: fixed;
    }

    .employee-table thead {
      position: sticky;
      top: 0;
      z-index: 1;
    }

    .employee-table td {
      color: black;
      font-size: 15px;
      text-align: left;

    }

    .employee-table tbody {
      display: block;
      max-height: 50vh;
      overflow: auto;
    }

    /* .employee-table tbody tr{
  min-height: 25px;
}
.employee-table tbody td {
  width: auto;
  max-width: 100px;
  min-width: 20px;
} */
    .employee-info {
      display: flex;
      align-items: center;
    }

    .employee-avatar {
      width: 40px;
      height: 40px;
      border-radius: 50%;
      margin-right: 10px;
    }

    .employee-name {
      font-weight: 500;
      color: #333;
    }

    .tooltipp {
      max-width: 200px;
      overflow: hidden;
      white-space: nowrap;
      text-overflow: ellipsis;
      max-height: 1.2em;
      transition: max-height 0.8s ease, white-space 0.8s ease;
      cursor: pointer;
    }

    .employee .cateForm {
      display: flex;
      align-items: center;

      justify-content: space-around;
      text-align: center;
      width: 98%;
      font-size: 13px;
    }

    .cateForm1 {
      display: block;
      text-align: left;
      width: 100%;
    }

    .cateForm label {
      display: flex;
      align-items: flex-start;
      gap: 2px;
      padding: 5px 10px;
      /* width: 50%; */
      flex-direction: column;
    }

    .Description {
      height: 150px;
    }

    .cateForm input {
      width: 97%;
      height: 30px;
    }

    .cateForm textarea {
      width: 98%;
    }

    .cateBtn {
      display: flex;
      justify-content: center;
      align-items: center;
      text-align: center;
      gap: 20px;
      padding-block: 20px;

    }

    .cateBtn button {
      padding: 7px 20px;
      border-radius: 15px;
      font-size: 15px;
      font-weight: 500;
      cursor: pointer;
    }

    .employee-table thead tr th {
      font-size: 12px;
      font-weight: 400;
      padding: 7px 5px;
      text-align: start;
    }

    .employee-attendance-table>.employee-table>tbody {
      max-height: 50vh;
    }

    .employee-attendance-table::-webkit-scrollbar {
      width: 8px;
    }

    .employee-attendance-table::-webkit-scrollbar-track {
      background: #f0f0f0;
      border-radius: 10px;
    }

    .employee-attendance-table::-webkit-scrollbar-thumb {
      background-color: #FC2B5A;
      border-radius: 10px;
      border: 2px solid #f0f0f0;
    }

    .employee-attendance-table::-webkit-scrollbar-thumb:hover {
      background-color: #d61a4d;
    }


    .new-model-dialog {
      max-width: 850px;
    }

    .header-tr tr:nth-child(1) {
      width: 135px;
    }

    tbody tr td:nth-child(1) input[type="checkbox"] {
      /* width: 135px; */
      width: 50px;
    }

    @media (max-width: 768px) {
      .employee-table tr {
        table-layout: auto;
      }

      .employee-attendance-table {
        overflow-x: scroll;
      }

      .employee-table {
        min-width: 100%;
      }


      .employee-info {
        white-space: nowrap;
        overflow: hidden;
        text-overflow: ellipsis;
      }

      .employee-table td:first-child,
      .employee-table th:first-child {
        min-width: 70px;
      }

      .employee-table td input[type="checkbox"] {
        width: 20px;
        height: 20px;
      }


      .employee-table td {
        min-width: 120px;
      }
    }
  </style>
  <script src="https://cdn.tiny.cloud/1/no-api-key/tinymce/5/tinymce.min.js" referrerpolicy="origin"></script>

  <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
  <% let candidates=[]; %> <!-- Candidates Array -->
    <% let page=1; %> <!-- Initial Page Number -->

      <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

      <script>
        let selectedFiles = []; // ✅ Yeh array uploaded files ko store karega

$(document).ready(function () {
    $("#file-upload").on("change", function () {
        handleFilePreview(this);
    });
});

// ✅ **Function to Preview & Remove Images**
function handleFilePreview(input) {
    let previewContainer = $("#image-preview");
    previewContainer.html(""); // ✅ Purane previews hatao

    if (input.files && input.files.length > 0) {
        selectedFiles = Array.from(input.files); // ✅ Files ko store karo
        
        selectedFiles.forEach((file, index) => {
            if (file.type.startsWith("image/") || file.type.startsWith("video/")) { // ✅ Sirf images/videos ka preview dikhaye
                let reader = new FileReader();
                reader.onload = function (e) {
                    let mediaElement = file.type.startsWith("image/")
                        ? `<img src="${e.target.result}" style="width: 100px; height: 100px; border-radius: 8px; object-fit: cover; border: 1px solid #ccc;">`
                        : `<video src="${e.target.result}" style="width: 100px; height: 100px; border-radius: 8px; object-fit: cover; border: 1px solid #ccc;" controls></video>`;

                    let previewItem = `
                        <div style="position: relative; display: inline-block;" data-index="${index}">
                            ${mediaElement}
                            <span class="remove-btn" 
                                style="position: absolute; top: -5px; right: -5px; background: white; color: white; border-radius: 50%; padding: 3px 6px; cursor: pointer;">
                                ❌
                            </span>
                        </div>`;
                    previewContainer.append(previewItem);
                };
                reader.readAsDataURL(file);
            }
        });
    }
}

// ✅ **Remove Image from Preview & Array**
$(document).on("click", ".remove-btn", function () {
    let index = $(this).parent().data("index"); // ✅ Correct index lo
    selectedFiles.splice(index, 1); // ✅ Array se remove karo
    $(this).parent().remove(); // ✅ Preview se bhi remove karo

    // ✅ Indexes ko reset karo taki naye indexes properly assign hoon
    $("#image-preview").children("div").each(function (newIndex) {
        $(this).attr("data-index", newIndex);
    });

    console.log("Updated Files Array:", selectedFiles);
});

// // ✅ **Submit Button Event for Posting**
// $("#post-form").on("submit", function (e) {
//     e.preventDefault(); // Default Form Submit ko rokna hai

//     let content = $("#post-content").val();
//     let formData = new FormData();

//     formData.append("content", content);

//     // ✅ **Jo bachi hui files hai sirf wahi bhejni hai**
//     selectedFiles.forEach((file) => {
//         formData.append("files", file);
//     });

//     console.log("Final Form Data:", formData);

//     // ✅ API Call for Uploading
//     $.ajax({
//         url: "/api/postfiles",
//         type: "POST",
//         data: formData,
//         processData: false,
//         contentType: false,
//         success: function (response) {
//             console.log("✅ Post Created Successfully:", response);
//             alert("Post created successfully!");
//             $("#post-form")[0].reset();
//             selectedFiles = []; // ✅ Array reset karo
//             $("#image-preview").html(""); // ✅ Preview bhi clear karo
//         },
//         error: function (xhr, status, error) {
//             console.error("❌ Error creating post:", error);
//             alert("Failed to create post. Please try again.");
//         }
//     });
// });

       
 </script>

      <script>
        // Initializing Variables
        var candidateslist = [];
        var candidatePage = 1;
        var candidateIsLoading = false; // Prevent multiple API calls
        var candidateHasMoreData = true; // जब तक डेटा मौजूद है, लोड होगा

        var compnieslist = [];
        var companiesPage = 1;
        var companiesIsLoading = false; // Prevent multiple API calls
        var companiesHasMoreData = true; // जब तक डेटा मौजूद है, लोड होगा

        var instituteslist = [];
        var institutesPage = 1;
        var institutesIsLoading = false; // Prevent multiple API calls
        var institutesHasMoreData = true; // जब तक डेटा मौजूद है, लोड होगा

        // Function to Fetch Candidates
        function fetchCandidates() {
          if (candidateIsLoading || !candidateHasMoreData) return; // अगर पहले से API कॉल हो रही है या डेटा नहीं है तो रोकें
          candidateIsLoading = true;

          $.ajax({
            url: "/admin/post/candidateslist?page=" + candidatePage,
            type: "GET",
            success: function (response) {
              console.log('candidate data', response)
              if (response && response.length > 0) {
                newCandidateslist = candidateslist.concat(response); // Add new data
                console.log("New Candidate List", newCandidateslist)
                appendCandidatesToDOM(newCandidateslist)
                // Append New Data to DOM
                candidatePage++; // ✅ Page तब ही बढ़ेगा जब डेटा आएगा
              } else {
                candidateHasMoreData = false; // अगर कोई डेटा नहीं मिला तो आगे API कॉल मत करो
              }
              candidateIsLoading = false;
            },
            error: function (xhr, status, error) {
              console.error("Error fetching candidates:", error);
              candidateIsLoading = false;
            },
          });
        };

        // Function to Render Candidates in the Table
        // ✅ **DOM में नया डेटा Map करने का Function (Table में Add करें)**
        function appendCandidatesToDOM(candidates) {
          console.log("adding data in consoel", candidates)
          candidates.forEach(candidate => {
            $("#candidateTableBody").append(`
            <tr>
              <td><input value="${candidate._id}" type="checkbox"></td>
                <td>${candidate.name}</td>
                <td>${candidate.mobile}</td>
            </tr>
        `);
          });
        }


        // ✅ **Scroll Event Handler: जब यूज़र 50% Scroll कर ले तब API कॉल हो**
        $(document).ready(function () {
          $("#candidateTableBody").on("scroll", function () {
            let scrollTop = $(this).scrollTop(); // कितने px स्क्रॉल हुआ
            let scrollHeight = $(this)[0].scrollHeight; // पूरे स्क्रॉल की हाइट
            let clientHeight = $(this).innerHeight(); // अंदर की हाइट

            let scrolledPercentage = (scrollTop + clientHeight) / scrollHeight * 100;
            console.log("Scrolled:", scrolledPercentage + "%"); // Debugging

            // जब scroll 50% के बाद हो जाए, तो API call करो
            if (scrolledPercentage > 80 && !candidateIsLoading && candidateHasMoreData) {
              console.log("Fetching More Data...");
              fetchCandidates();
            }
          });
        });


        // Function to Fetch Candidates
        function fetchCompnies() {
          if (companiesIsLoading || !companiesHasMoreData) return; // अगर पहले से API कॉल हो रही है या डेटा नहीं है तो रोकें
          companiesIsLoading = true;

          $.ajax({
            url: "/admin/post/companylist?page=" + companiesPage,
            type: "GET",
            success: function (response) {
              console.log('company data', response)
              if (response && response.length > 0) {
                newCompnieslist = compnieslist.concat(response); // Add new data
                console.log(newCompnieslist)
                appendCompaniesToDOM(newCompnieslist)
                // Append New Data to DOM
                companiesPage++; // ✅ Page तब ही बढ़ेगा जब डेटा आएगा
              } else {
                companiesHasMoreData = false; // अगर कोई डेटा नहीं मिला तो आगे API कॉल मत करो
              }
              companiesIsLoading = false;
            },
            error: function (xhr, status, error) {
              console.error("Error fetching companies:", error);
              companiesIsLoading = false;
            },
          });
        }

        // Function to Render Candidates in the Table
        // ✅ **DOM में नया डेटा Map करने का Function (Table में Add करें)**
        function appendCompaniesToDOM(companies) {
          console.log("adding data in consoel", companies)
          companies.forEach(company => {
            $("#companyTableBody").append(`
            <tr>
              <td><input value="${company._id}" type="checkbox"></td>
                <td>${company.name}</td>
                <td>${company.mobile}</td>
            </tr>
        `);
          });
        }

        // ✅ **Scroll Event Handler: जब यूज़र 50% Scroll कर ले तब API कॉल हो**
        $(document).ready(function () {
          $("#companyTableBody").on("scroll", function () {
            let scrollTop = $(this).scrollTop(); // कितने px स्क्रॉल हुआ
            let scrollHeight = $(this)[0].scrollHeight; // पूरे स्क्रॉल की हाइट
            let clientHeight = $(this).innerHeight(); // अंदर की हाइट

            let scrolledPercentage = (scrollTop + clientHeight) / scrollHeight * 100;
            console.log("Scrolled:", scrolledPercentage + "%"); // Debugging

            // जब scroll 50% के बाद हो जाए, तो API call करो
            if (scrolledPercentage > 80 && !companiesIsLoading && companiesHasMoreData) {
              console.log("Fetching More Data...");
              fetchCompnies();
            }
          });
        });

        // Function to Fetch Candidates
        function fetchInstitutes() {
          if (institutesIsLoading || !institutesHasMoreData) return; // अगर पहले से API कॉल हो रही है या डेटा नहीं है तो रोकें
          institutesIsLoading = true;

          $.ajax({
            url: "/admin/post/institutelist?page=" + institutesPage,
            type: "GET",
            success: function (response) {
              console.log('Institutes data', response)
              if (response && response.length > 0) {
                newInstituteslist = instituteslist.concat(response); // Add new data
                console.log(newInstituteslist)
                appendInstitutesToDOM(newInstituteslist)
                // Append New Data to DOM
                institutesPage++; // ✅ Page तब ही बढ़ेगा जब डेटा आएगा
              } else {
                institutesHasMoreData = false; // अगर कोई डेटा नहीं मिला तो आगे API कॉल मत करो
              }
              institutesIsLoading = false;
            },
            error: function (xhr, status, error) {
              console.error("Error fetching institutes:", error);
              institutesIsLoading = false;
            },
          });
        }

        // Function to Render Candidates in the Table
        // ✅ **DOM में नया डेटा Map करने का Function (Table में Add करें)**
        function appendInstitutesToDOM(institutes) {
          console.log("adding data in consoel", institutes)
          institutes.forEach(institute => {
            $("#collegeTableBody").append(`
            <tr>
              <td><input value="${institute._id}" type="checkbox"></td>
                <td>${institute.name}</td>
                <td>${institute.mobile}</td>
            </tr>
        `);
          });
        }

        // ✅ **Scroll Event Handler: जब यूज़र 50% Scroll कर ले तब API कॉल हो**
        $(document).ready(function () {
          $("#collegeTableBody").on("scroll", function () {
            let scrollTop = $(this).scrollTop(); // कितने px स्क्रॉल हुआ
            let scrollHeight = $(this)[0].scrollHeight; // पूरे स्क्रॉल की हाइट
            let clientHeight = $(this).innerHeight(); // अंदर की हाइट

            let scrolledPercentage = (scrollTop + clientHeight) / scrollHeight * 100;
            console.log("Scrolled:", scrolledPercentage + "%"); // Debugging

            // जब scroll 50% के बाद हो जाए, तो API call करो
            if (scrolledPercentage > 80 && !institutesIsLoading && institutesHasMoreData) {
              console.log("Fetching More Data...");
              fetchInstitutes();
            }
          });
        });



        let selectedTags = []; // Selected candidates store होंगे

        // ✅ Function: Checkbox Click होने पर Data Store/Remove होगा
        $(document).on("change", "#candidateTableBody input[type=checkbox]", function () {
          let id = $(this).val();
          let name = $(this).closest("tr").find("td:nth-child(2)").text().trim();
          let candidateMobile = $(this).closest("tr").find("td:nth-child(3)").text().trim();
          let userType = "candidate"; // Default type candidate

          if ($(this).prop("checked")) {
            // ✅ अगर checkbox select किया गया तो add करो
            selectedTags.push({
              userId: id,
              name: name,
              userType: userType
            });

            updateTagList();
            hideOrShowDoneButton()
          } else {
            // ✅ अगर uncheck किया गया तो remove करो
            selectedTags = selectedTags.filter(c => c.userId !== id);
            updateTagList();
            hideOrShowDoneButton()
          }

          console.log("Selected Candidates:", selectedTags);
        });

        $(document).on("change", "#companyTableBody input[type=checkbox]", function () {
          let id = $(this).val();
          let name = $(this).closest("tr").find("td:nth-child(2)").text().trim();
          let candidateMobile = $(this).closest("tr").find("td:nth-child(3)").text().trim();
          let userType = "company"; // Default type candidate

          if ($(this).prop("checked")) {
            // ✅ अगर checkbox select किया गया तो add करो
            selectedTags.push({
              userId: id,
              name: name,
              userType: userType
            });

            updateTagList();
            hideOrShowDoneButton()
          } else {
            // ✅ अगर uncheck किया गया तो remove करो
            selectedTags = selectedTags.filter(c => c.userId !== id);
            updateTagList();
            hideOrShowDoneButton()
          }

          console.log("Selected Tags:", selectedTags);
        });
        $(document).on("change", "#collegeTableBody input[type=checkbox]", function () {
          let id = $(this).val();
          let name = $(this).closest("tr").find("td:nth-child(2)").text().trim();
          let candidateMobile = $(this).closest("tr").find("td:nth-child(3)").text().trim();
          let userType = "institute"; // Default type candidate

          if ($(this).prop("checked")) {
            // ✅ अगर checkbox select किया गया तो add करो
            selectedTags.push({
              userId: id,
              name: name,
              userType: userType
            });
            hideOrShowDoneButton()

            updateTagList();
          } else {
            // ✅ अगर uncheck किया गया तो remove करो
            selectedTags = selectedTags.filter(c => c.userId !== id);

            updateTagList();
            hideOrShowDoneButton()
          }

          console.log("Selected Candidates:", selectedTags);
        });

        function updateTagList() {
          $("#tagscandidate").empty(); // पहले सभी Tags को Clear करें
          selectedTags.forEach((selectedTag, index) => {
            $("#tagscandidate").append(`
            <div class="btn btn-primary tag-item" style="padding: 0.3rem 1rem;" data-id="${selectedTag.userId}">
                ${selectedTag.name} 
                <span class="badge bg-secondary remove-tag" data-index="${index}">
                    <i class="fa-solid fa-x" style="color: #000000;" aria-hidden="true"></i>
                </span>
            </div>
        `);
          });
        }

        // ✅ Remove Tag on Click
        $(document).on("click", ".remove-tag", function () {
          let index = $(this).data("index");
          let userId = selectedTags[index].userId;

          // ✅ Remove from Array
          selectedTags.splice(index, 1);

          // ✅ Uncheck the Checkbox
          $(`#candidateTableBody input[value="${userId}"]`).prop("checked", false);
          $(`#collegeTableBody input[value="${userId}"]`).prop("checked", false);
          $(`#companyTableBody input[value="${userId}"]`).prop("checked", false);

          // ✅ Update UI
          updateTagList();
          hideOrShowDoneButton()
        });

        function closePopup() {
          $("#candidateTableBody input[type=checkbox]:checked").prop("checked", false);
          $("#companyTableBody input[type=checkbox]:checked").prop("checked", false);
          $("#collegeTableBody input[type=checkbox]:checked").prop("checked", false);
          selectedTags = [];
          updateTagList();
          hideOrShowDoneButton();
          

        }

        function hideOrShowDoneButton() {
          const message = document.getElementById("donebutton");
          if (selectedTags.length === 0) {
            message.style.display = "none";
          } else {
            message.style.display = "block";
          }
        }
        hideOrShowDoneButton();

        // function appendTagsToDOM(selectedTags) {
        //   console.log("adding data in consoel", selectedTags)

        // }

        fetchCompnies()
        fetchCandidates()
        fetchInstitutes()

        $(document).ready(function () {
    $("#post-form").on("submit", function (e) {
        e.preventDefault(); // Default Form Submit को रोकें

        // ✅ Form Data को Extract करें
        let content = $("#post-content").val();
        let files = $("#file-upload")[0].files;

        // ✅ Selected Tags (Candidate, Company, Institute)
        let taggedUsers = selectedTags; // यह Array में सभी Selected Users देगा

        // ✅ FormData Object बनाएं
        const formData = new FormData();
        formData.append("content", content);

        // ✅ Files को Add करें
        selectedFiles.forEach((file) => {
        formData.append("files", file);
    });

        // ✅ Tags को JSON में Convert करके Append करें
        formData.append("tags", JSON.stringify(taggedUsers));

        // ✅ Data को Console में Print करें
        console.log("🔹 Post Content:", content);
        console.log("🔹 Attached Files:", files);
        console.log("🔹 Tagged Users:", taggedUsers);
        console.log("🔹 Tagged Users:", taggedUsers);


        // ✅ API Call करें
        $.ajax({
            url: "/api/postfiles", // API Endpoint
            type: "POST",
            data: formData,
            processData: false,  // Required for FormData
            contentType: false,  // Required for FormData
            success: function (response) {
                console.log("✅ Post Created Successfully:", response);
                alert("Post created successfully!");

                // ✅ Form Reset करें
                $("#post-form")[0].reset();
                $("#image-preview").html(""); // ✅ Preview bhi clear karo
                selectedTags = [];
                updateTagList();
            },
            error: function (xhr, status, error) {
                console.error("❌ Error creating post:", error);
                alert("Failed to create post. Please try again.");
            }
        });
    });
});

      </script>



      <script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
      <!-- <script src="https://cdn.ckeditor.com/ckeditor5/37.0.0/classic/ckeditor.js"></script> -->

      <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js"></script>

      


      <% include ../partials/footer %>
        </div>
      </body>
      </html>